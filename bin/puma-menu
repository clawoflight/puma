#!/bin/bash
# Wrapper providing a log-in GUI
#
# This file is part of PUMA.
# Copyright 2017 Bennett Piater and Justus Piater
#
# PUMA is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PUMA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PUMA.  If not, see <http://www.gnu.org/licenses/>.
#
# To use this, you must put all of your login files in $PUMA_KEYRING .
# If you do so, invoke this and simply select the account that you want to use.
# (While having focus in a login form) The puma script will then log you in.

PUMA_KEYRING="${PUMA_KEYRING:-$HOME/Documents/keyring}"
prompt="Login:"
declare -a puma_args

# Check for options
if [[ x"$1" = x"-p" ]]; then
    puma_args+=(-p)
    prompt="Password only:"
fi

if [[ x"$1" = x"-u" ]]; then
    puma_args+=(-u)
    prompt="Username only:"
fi

# Check whether automatic login is possible
if [[ -f "$PUMA_KEYRING/autologin.csv" ]]; then
    window_title="$(xdotool getwindowfocus getwindowname)"
    # Find matching file
    # This matches the window title against the second csv column
    file=$(awk -F' *, *' "\"$window_title\" ~ \$2 { print \$3; exit }" "$PUMA_KEYRING/autologin.csv")

    if [[ x"$file" != x ]]; then
	sleep .5 # give time for user to release shortcut keys
	puma "${puma_args[@]}" "$(echo $file)" # echo to remove surrounding whitespace
        exit
    fi
fi

# If no autologin rule was found, open dmenu
find "$PUMA_KEYRING" -readable -name '*.gpg' -not -type d -printf "%P\n" |
    sort |
    sed 's/\(.*\)\..*/\1/' |
    dmenu -p "$prompt" |
    xargs puma "${puma_args[@]}"
