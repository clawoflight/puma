#!/bin/bash
# Log in using credentials
#
# This file is part of PUMA.
# Copyright 2017 Bennett Piater and Justus Piater
#
# PUMA is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PUMA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PUMA.  If not, see <http://www.gnu.org/licenses/>.
#
# Usage: $0 [-u] [-p] <auth>
# <auth> can be either such that $keyring/<auth>.gpg holds the credentials,
# In such files, credentials must be stored as:
# User: <username>
# Pass: <password>
#
# Starting from the current X cursor position, this script then types
# <username> <TAB> <password> <ENTER>

PUMA_KEYRING="${PUMA_KEYRING:-$HOME/Documents/keyring}"

u=yes
p=yes
while test $# -gt 0; do
    case "$1" in
	-p)  u= ; shift;;
	-u)  p= ; shift;;
	*)   key="$1"; break;;
    esac
done

if [[ x"$key" = x ]]; then
    echo "usage: $0 [-u|-p] <account>" >&2
    exit 1
elif [[ x"$key" = x"--help" || x"$key" = x"-h" ]]; then
    echo "usage: $0 [-u|-p] <account>

Type out user name, TAB, password and ENTER.

<account> is the file name without .gpg.
Options:
 -u    only type the user name + TAB.
 -p    only type the password + ENTER.
"
    exit 0
fi


typeout() {
    local gpg="/usr/bin/gpg --no-tty --quiet --decrypt $PUMA_KEYRING/$key.gpg"
    echo type "$($gpg | grep -m 1 "$1: " | cut -d " " -f 2)" | xdotool -
}


if [ -n "$u" ]; then
    typeout User
    xdotool key Tab
fi
if [ -n "$p" ]; then
    typeout Pass
    xdotool key Return
fi
